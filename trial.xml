<problem><category>minco</category><solver>FilMINT</solver><inputType>AMPL</inputType><priority>long</priority><model><![CDATA[param tasks;
param robots;
set city = 1..tasks;
set DEST = 2..tasks;
set ROBO = 1..robots;
param D{city,city};
param S{ROBO};
var U{city} >= 0 integer;
var x{city,city,ROBO} binary;
param N := card(city);


minimize objective_function:
			max(sum{i in city, j in city}	x[i,j,1]*D[i,j], sum{i in city, j in city}	x[i,j,2]*D[i,j]);



subject to depart{k in ROBO}:			# m robots leave depot
	sum{j in city} x[1,j,k] = 1;

subject to return{k in ROBO}:			# m robots return to depot
	sum{j in city} x[j,1,k] = 1;

subject to noreturn{i in city, k in ROBO}:		# robots can't depart and arrive to same location
	x[i,i,k] = 0;

subject to routecontinuity{p in city, k in ROBO}:
	sum{i in city} x[i,p,k] - sum{j in city} x[p,j,k] = 0;

subject to singleentrance{j in DEST}: 	# all nodes are entered exactly once
	sum{i in city} sum{k in ROBO} x[i,j,k] = 1;

subject to singleexit{i in DEST}:	# all nodes are exited exactly once
	sum{j in city} sum{k in ROBO} x[i,j,k] = 1;

subject to c3{l in ROBO, k in city, j in city: j > 1 and k > 1}:  			#no subtours
          U[j] - U[k] + N*x[j,k,l] <= N-1;

]]></model><data><![CDATA[param tasks:=7;
param robots:=2;
param S :  1  2:=
1  1  1;
param D : 1 2 3 4 5 6 7:=
1	0	2.0	3.2161	5.00072	4.49598	2.82845	5.00081
2	0	0	1.41425	4.12706	2.82843	2.0	3.60682
3	0	1.41428	0	5.0	3.16666	1.41422	4.12706
4	0	4.12746	5.0	0	2.23933	6.08686	1.41425
5	0	2.82844	3.16755	2.24039	0	4.47693	1.0
6	0	2.0	1.41422	6.08647	4.476	0	5.39017
7	0	3.60818	4.12746	1.41428	1.0	5.39115	0
;]]></data><commands><![CDATA[solve;
    show;
    display _varname, _var;
    display x;
    display objective_function;
    display sum{i in city, j in city} x[i,j,1]*D[i,j];
    display sum{i in city, j in city} x[i,j,2]*D[i,j];
    display sum{i in city, j in city} x[i,j,3]*D[i,j];
    ]]></commands></problem>